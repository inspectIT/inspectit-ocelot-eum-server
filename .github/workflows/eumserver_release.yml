name: Release Eum Server

on: 
    push:
        tags:
            - 'v*'

jobs:
    test_eum_server:
        uses: ./.github/workflows/eumserver_test.yml

    build_project:
      name: Build EUM Server
      runs-on: ubuntu-latest
      needs: [test_eum_server]
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Grant execute permission for gradlew
          run: chmod +x gradlew
        - name: Build artifacts
          run: |
            ./gradlew build bootJar -PbuildVersion=${{ github.ref_name }}
            mkdir artifacts
            cp ./inspectit-ocelot-eum-server/build/libs/inspectit-ocelot-eum-server-{{ $github.ref_name }}.jar ./artifacts
        - name: Create Release
          uses: softprops/action-gh-release@v0.1.14
          with:
            files: artifacts/*
            generate_release_notes: true
            token: ${{ secrets.RELEASE_USER_TOKEN }}
            name: Version ${{ github.ref_name }}
        
    test_release:
        name: "test release"
        runs-on: ubuntu-latest
        needs: [test_eum_server, build_project]
        steps:
            - name: Download site content
              uses: actions/download-artifact@v2
              with:
                name: eumserver-jar
                path: out/
            - name: Archive site content
              uses: thedoctor0/zip-release@master
              with: 
                filename: test.zip
            - name: Create Github Release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: $ {{ GITHUB_TOKEN }}
            - name: Create release
              id: create-release
              run: gh release create ${{ github.ref }} --generate-notes
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Upload asset to github release
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: $ {{ GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create-release.outputs.upload_url }}
                asset_path: ./test.zip
                asset_name: test-v.zip
                asset_content_type: application/zip

    publish_docker_images:
      name: "Publish docker image"
      runs-on: ubuntu-latest
      needs: [build_project]
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: danipaniii/test:latest, ${{ github.ref }}
          file: ./docker/Dockerfile
              
              
              
              
              
              
              

              
            
    