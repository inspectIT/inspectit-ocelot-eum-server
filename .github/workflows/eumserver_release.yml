name: Release Eum Server

on: [push]

jobs:
    test_eum_server:
        uses: ./.github/workflows/eumserver_test.yml
        
    build:
        name: Upload Release Asset
        runs-on: ubuntu-latest
        needs: [test_eum_server]
        
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          - name: Build project # This would actually build your project, using zip for an example artifact
            run: |
              zip --junk-paths my-artifact README.md
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ github.ref }}
              release_name: Release ${{ github.ref }}
              draft: false
              prerelease: false
          - name: Upload Release Asset
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./my-artifact.zip
              asset_name: my-artifact.zip
              asset_content_type: application/zip
              
    build_assets:
        name: "Build assets"
        runs-on: ubuntu-latest
        environment: release
        needs: [build]
        
        steps:
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            - name: run bootJar
              run: ./gradlew assemble build/bootJar
            
    publish_docker_images:
        name: "Publish docker image"
        runs-on: ubuntu-latest
        environment: release
        needs: [test_eum_server]
        
        steps:
            - uses: actions/checkout@v3
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
              
              
              
              
              
              
              

              
            
    