inspectit-eum-server:

  definitions:

    resource_time:
      enabled: true
      description: Response end time of the resource loading
      instrument-type: HISTOGRAM
      value-type: DOUBLE
      value-expression: "{restiming}"
      unit: ms
      views:
        resource_time:
          aggregation: HISTOGRAM
          attributes:
            initiatorType: true
            cached: true
            crossOrigin: true

    page_ready_time:
      instrument-type: HISTOGRAM
      value-type: LONG
      value-expression: "{t_page}"
      unit: ms
      views:
        page_ready_time: { aggregation: HISTOGRAM }

    load_time:
      instrument-type: HISTOGRAM
      value-type: LONG
      value-expression: "{t_done}"
      beacon-requirements:
        - field: rt.quit
          requirement: NOT_EXISTS
      unit: ms
      views:
        load_time: { aggregation: HISTOGRAM }

    calc_load_time:
      instrument-type: HISTOGRAM
      value-type: LONG
      value-expression: "{rt.end} - {rt.tstart}"
      beacon-requirements:
        - field: rt.quit
          requirement: NOT_EXISTS
      unit: ms
      views:
        calc_load_time: { aggregation: HISTOGRAM }

    start_timestamp:
      instrument-type: GAUGE
      value-type: LONG
      value-expression: "{rt.tstart}"
      unit: ms
      views:
        start_timestamp:
          aggregation: LAST_VALUE
          attributes: { APPLICATION: true }

    navigation_start_timestamp:
      instrument-type: GAUGE
      value-type: LONG
      value-expression: "{rt.nstart}"
      unit: ms
      views:
        navigation_start_timestamp:
          aggregation: LAST_VALUE
          attributes: { APPLICATION: true }

    end_timestamp:
      instrument-type: GAUGE
      value-type: LONG
      value-expression: "{rt.end}"
      unit: ms
      views:
        end_timestamp:
          aggregation: LAST_VALUE
          attributes: { APPLICATION: true }

  attributes:
    extra:
      APPLICATION: my-application
    beacon:
      COUNTRY_CODE:
        input: COUNTRY_CODE
      URL:
        input: u
        null-as-empty: true
      OS:
        input: ua.plt
        null-as-empty: true
      U_NO_QUERY:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^([^?]*)(\\?.*)?$"
            replacement: "$1"
      U_HOST:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*).*$"
            replacement: "$1"
      U_PORT:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*):(\\d+).*$"
            replacement: "$2"
      U_PATH:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^\\/]*)([^?]*).*$"
            replacement: "$2"
      PGU_NO_QUERY:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^([^?]*)(\\?.*)?$"
            replacement: "$1"
      PGU_HOST:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*).*$"
            replacement: "$1"
      PGU_PORT:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*):(\\d+).*$"
            replacement: "$2"
      PGU_PATH:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^\\/]*)([^?]*).*$"
            replacement: "$2"
    define-as-global:
      - URL
      - OS
      - COUNTRY_CODE

  # metrics exporter settings
  exporters:

    # service name for all exported data
    service-name: browser-js

    metrics:
      prometheus:
        # Determines whether the prometheus exporter is enabled.
        enabled: DISABLED

        # The host of the prometheus HTTP endpoint.
        host: localhost

        # The port of the prometheus HTTP endpoint.
        port: 8888

      # settings for the OtlpGrpcMetricExporter used in OtlpGrpcMetricExporterService
      otlp:
        # Determines whether the otlp metrics exporter is enabled.
        enabled: IF_CONFIGURED
        # the export interval of the metrics
        export-interval: 15s
        # the URL endpoint, e.g., http://127.0.0.1:4317
        endpoint: null
        # the transport protocol, e.g., 'grpc' or 'http/protobuf'
        protocol: grpc
        # headers
        headers: { }
        # the aggregation temporality, e.g., CUMULATIVE or DELTA
        preferredTemporality: CUMULATIVE
        # compression method, e.g., NONE or GZIP
        compression: NONE
        # timeout, i.e., maximum time the OTLP exporter will wait for each batch export
        timeout: 10s

    tracing:
      # Specifies whether client IP addresses which are added to spans should be masked.
      mask-span-ip-addresses: true

      otlp:
        # If OTLP exporter for the OT received spans is enabled.
        enabled: IF_CONFIGURED
        # the URL endpoint, e.g., http://127.0.0.1:4317
        endpoint: null
        # the transport protocol, e.g., 'http/thrift' or 'grpc'
        protocol: grpc
        # headers
        headers: { }
        # compression method
        compression: NONE
        # timeout, i.e., maximum time the OTLP exporter will wait for each batch export
        timeout: 10s

    beacons:
      http:
        # Whether beacons should be exported via HTTP.
        enabled: DISABLED

        # The endpoint to which the beacons are to be sent.
        endpoint-url: http://localhost:8080

        # The max. amount of threads exporting beacons (min. 1).
        worker-threads: 2

        # The maximum number of beacons to be exported using a single HTTP request (min. 1).
        max-batch-size: 100

        # The flush interval to export beacons in case the 'max-batch-size' has not been reached (min. 1 second).
        flush-interval: 5s

        # When specified, the request will be using this username for Basic authentication.
        # username:

        # The password used for Basic authentication.
        # password:

  # settings for the EUM server's self-monitoring
  self-monitoring:

    # whether self-monitoring is enabled
    enabled: true

    # the prefix used for the self-monitoring metrics
    metricPrefix: "inspectit_eum_self_"

    # definitions of the self-monitoring metrics
    metrics:
      # counts the amount of received EUM beacons
      beacons_received:
        instrument-type: COUNTER
        value-type: LONG
        unit: amount
        views:
          inspectit_eum_self_beacons_received:
            aggregation: SUM
            attributes:
              is_error: true

      beacons_export:
        instrument-type: HISTOGRAM
        value-type: LONG
        unit: amount
        views:
          inspectit_eum_self_beacons_export:
            aggregation: HISTOGRAM
            attributes:
              exporter: true
              is_error: true

      beacons_export_batch:
        instrument-type: COUNTER
        value-type: LONG
        unit: amount
        views:
          # the amount of elements in a single export execution
          inspectit_eum_self_beacons_export_batch:
            aggregation: SUM
            attributes:
              exporter: true
              is_error: true

      beacons_processor:
        instrument-type: HISTOGRAM
        value-type: LONG
        unit: amount
        views:
          inspectit_eum_self_beacons_processor:
            aggregation: HISTOGRAM
            attributes:
              beacon_processor: true
              is_error: true

      traces_received:
        instrument-type: HISTOGRAM
        value-type: LONG
        unit: amount
        views:
          inspectit_eum_self_traces_received:
            aggregation: HISTOGRAM
            attributes:
              is_error: true

      traces_span_size:
        instrument-type: COUNTER
        value-type: LONG
        unit: amount
        views:
          inspectit_eum_self_traces_span_size:
            aggregation: SUM
            attributes:
              is_error: true

  security:
    # Enable/Disable Security
    enabled: false
    # Change name of authentication header if required
    authorization-header: Authorization
    # White list certain urls which must not be secured
    permitted-urls:
      - "/actuator/health"
      - "/boomerang/**"
    auth-provider:
      simple:
        # Enable/Disable Provider
        enabled: false
        # Flag indicates if the directory should be watched for changes and tokens reloaded
        watch: true
        # How often directory should be watched for changes
        frequency: 60s
        # The directory where token files are stored. Empty by default to force users to provide one
        token-directory: ""
        # The name of the initial token file. If a name is provided file will be created with an initial token
        default-file-name: "default-token-file.yaml"


# SERVER properties
# Avoid exposing internals to outside via error page
server:
  error:
    include-stacktrace: never
    include-binding-errors: never
    include-message: never
    whitelabel:
      enabled: false

# ACTUATOR PROPERTIES
management:
  # Whether to enable or disable all endpoints by default.
  endpoints.enabled-by-default: false
  endpoint:
    # Whether to enable the health endpoint.
    health.enabled: true

spring:
  autoconfigure:
    # Disable ErrorMvcAutoConfiguration to avoid nasty exceptions if whitelabel error page is disabled
    # https://github.com/spring-projects/spring-boot/issues/2001
    exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

  threads.virtual.enabled: true
